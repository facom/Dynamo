#!/usr/bin/env python
#coding:utf-8
from dynamo import *

#informacion general
simulation="MW_clues_10909_1.63_1_eq_HQ_WB_MMP"
numsnapshot="000"
simfile="%s_%s.sim"%(simulation,numsnapshot)

"""
################################################
1- convertir gadget a ascii
################################################
"""
print "\n######################################################"
print "This script calculates the surface density with dynamo"
print "######################################################\n"

if not isfile(simfile):
    print "Becoming from binary to ascii..."
    shellExec(RUN+"bin2sim.out -V -s %s -n %s -S"%(simulation,numsnapshot))
    print "Done."
    print "Updating header...\t"
    shellExec(RUN+"updatesim.out -f %s"%simfile)
    print "Done."
else:
    print "The file of simulation '%s' already exist..."%simfile
"""
################################################
2- transformar todo al CM del sistema
################################################
"""
newfile="%s.trn"%simfile
if not isfile(newfile):
    print "Transforming to CM of the system into '%s'..."%newfile
    poscm=getHeader(simfile,"POSIT.CM")
    velcm=getHeader(simfile,"VELOC.CM")
    angmom=getHeader(simfile,"ANG.MOM.TOT")
    shellExec(RUN+"transform.out -V -s %s -t %s -o %s -e %s -j %s -l 1"%(simfile,
                                                                        newfile,
                                                                        ",".join(poscm),
                                                                        ",".join(velcm),
                                                                        ",".join(angmom)))
    print "Done."
    print "updating header..."
    shellExec(RUN+"updatesim.out -f %s"%newfile)
    print "Done."
else:
    print "The fILE '%s' already exist..."%newfile
simfile=newfile

"""
###################################################
4- filtar las particulas correspondientes del disco
###################################################
"""

newfile="%s.disk"%simfile
print "filtering the particles of disk in '%s'..."%newfile
shellExec(RUN+"filter.out -f %s -s %s -n 25 -c 4 -e 2"%(simfile,newfile))
print "Done."
simfile=newfile

"""
print "Density radial map for the disk in '%s.map'..."%simfile
shellExec(RUN+"./scalarmap.out -V -f %s -s mass_density -c cyl -i -,-,- -e -,-,- -n 100,1,1"%simfile)
print "Done."
"""
"""
Estadistica sobre epsilon para las particulas de disco y bulbo
"""

newfile="%s.hisR"%simfile
print "making statistics for R in '%s'..."%newfile
shellExec(RUN+"stats.out -V -f %s -s %s -n25 -c 13 -b 100 -t g -w 5"%(simfile,newfile))
print "Done."

radios=open(newfile,"r")

R=zeros(100,float)
Rini=zeros(100,float)
Rfin=zeros(100,float)
m=zeros(100,float)

i=0
for line in radios:
    if (line[i]!="#"):
        datos=line.strip().split(" ")
        R[i]=datos[1]
        Rini[i]=datos[0]
        Rfin[i]=datos[2]
        m[i]=datos[3]
        i=i+1
radios.close()



for i in range(0,100):
    print Rini[i],R[i],Rfin[i],m[i]

surface=2.0*pi*R*(Rfin-Rini);
#surface=R*(Rfin-Rini);

density=m/surface

density_profile=open("radial_profile.dat","w")

for i in range(0,100):
    density_profile.write("%e %e\n"%(R[i],log10(density[i])))

density_profile.close()





